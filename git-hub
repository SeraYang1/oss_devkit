#!/usr/bin/env python
import subprocess
import github
import yaml
import click
import sys
import textwrap
import pickle


def pr(num):
    # runs git and gets user and repo of current folder.
    process = subprocess.Popen("git remote -v", stdout=subprocess.PIPE)
    remotes = str(process.stdout.read())
    url = remotes.split(" ", 1)[0]  # gets the fetch url
    url = url.split("\\t", 1)[1]  # takes out extra info
    arguments = url.split(".com:")[1]  # gets just the username/repo.git
    arguments = arguments[:len(arguments) - 4]  # takes out ".git"
    username, repo = arguments.split("/")

    # gets token from config folder.
    try:
        with open(".config/git-hub.yaml") as stream:
            yaml_file = str(yaml.load(stream))
            token = yaml_file.split("=")[1].strip()

    except (IndexError, FileNotFoundError) as e:
        print(textwrap.dedent("""Needs an authentification token in: ~/.config/git-hub.yaml
            file simply says: token = abc123
            Visit https://help.github.com/articles/
            creating-a-personal-access-token-for-the-command-line/"""))
        sys.exit(1)

    # gets pr and runs command.
    try:
        g = github.Github(token)
        pr = g.get_user(username).get_repo(repo).get_pull(num)
        label = pr.head.label
        other_user, branch = label.split(":")
        remote_name = "\\n" + other_user + "\\t"
        if remote_name not in remotes:
            p = subprocess.Popen(
                f'git remote add {other_user} \
                git@github.com:{other_user}/{repo}')
            p.communicate()
        p = subprocess.Popen(f'git fetch {other_user}', stdout=subprocess.PIPE)
        p.stdout.read()
        subprocess.Popen(f'git checkout -b pr/{num} {other_user}/{branch}')
        with open("data.pickle", "wb") as f:
            data = f'{other_user} pr/{num} {branch}'
            pickle.dump(data, f, pickle.HIGHEST_PROTOCOL)

    except github.BadCredentialsException as e:
        print(e)
        print("The authentification token is not valid.")
        sys.exit(1)

    except github.UnknownObjectException as e:
        print(e)
        print(f'There is no pr with number {num}.')
        sys.exit(1)


def push():
    with open("data.pickle", "rb") as f:
        data = pickle.load(f)
        other_user, pr, branch = data.split()
        subprocess.Popen(f'git push {other_user} {pr}:{branch}')
        # should I delete the pickle file after? Or save it in a config file?


@click.group()
def cli():
    pass


@cli.command()
@click.argument("command", default="")
@click.argument("args", nargs=-1)
def hub(command, args):
    if command == "pr":
        pr_num = int(args[0])
        pr(pr_num)

    elif command == "push":
        push()

    else:
        print("invalid command")
        sys.exit(1)


if __name__ == "__main__":
    hub()
